
class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        if(nums == null || nums.length == 0) return res;
        int len = nums.length;
        Arrays.sort(nums);
        
        for(int i=0; i<nums.length; i++) {
            if(i>0 && nums[i] == nums[i-1]) continue;
            int target = -nums[i];
            int left = i+1, right = nums.length-1;
            while(left < right) {
                if(nums[left] + nums[right] == target) {
                    List<Integer> tmp = new ArrayList<>();
                    tmp.add(nums[i]);
                    tmp.add(nums[left]);
                    tmp.add(nums[right]);
                    res.add(tmp);
                    left++;
                    right--;
                while(left < right && nums[left] == nums[left-1]) left++;
                while(left < right && nums[right] == nums[right+1]) right--;
                }
                else if(nums[left] + nums[right] < target) left++;
                else right--;
            }
        }
        return res;
    }
}


// time: Ologn+On^2 == O(n^2)
// space: O(n)
