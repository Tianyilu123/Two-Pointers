
class Solution {
    public int lengthOfLongestSubstringKDistinct(String s, int k) {
        if(s == null || k == 0) return 0;
        int len = s.length(), num = 0, start = 0, res = 0;
        int count[] = new int[256];
        
        for(int i=0; i<len; i++) {
            char cc = s.charAt(i);
            if(count[cc] == 0) {
                num++;
            }
            count[cc]++;
            while(num > k) {
                count[s.charAt(start)]--;
                if(count[s.charAt(start)] == 0) {
                    num--;
                }
                start++;
            }
            res = Math.max(res, i-start+1);
        }
        return res;
    }
}


// time: O(n)
// space: O(1)
