
class Solution {
    public int characterReplacement(String s, int k) {
        if(s == null || s.length() == 0 || k < 0) return 0;
        
        int[] counter = new int[26];
        int len = s.length(), start = 0, max = 0;
        char maxChar = '\0';
        
        for(int i = 0; i<len; i++) {  // O(n)
            char ch = s.charAt(i);
            counter[ch - 'A']++;
            if(maxChar == '\0' || counter[ch-'A'] > counter[maxChar - 'A']) {
                maxChar = ch;
            }
            
            while(i-start+1-counter[maxChar - 'A'] > k) { // shrink logic  // O(256) = O(1)
                char startChar = s.charAt(start++);
                counter[startChar - 'A']--;
                
                if(startChar == maxChar) {
                    for(char cc = 'A'; cc <= 'Z'; cc++) {
                        if(counter[cc-'A'] > counter[maxChar-'A']) {
                            maxChar = cc;
                        }
                    }
                }
            }
            max = Math.max(max, i-start+1);
        }
        return max; // overall O(n)
    }
}
